<?php

/**
 * BaseBlogPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $content
 * @property boolean $markdown
 * @property integer $views
 * @property boolean $published
 * @property boolean $micropost
 * @property Doctrine_Collection $comments
 * 
 * @method string              getTitle()     Returns the current record's "title" value
 * @method string              getContent()   Returns the current record's "content" value
 * @method boolean             getMarkdown()  Returns the current record's "markdown" value
 * @method integer             getViews()     Returns the current record's "views" value
 * @method boolean             getPublished() Returns the current record's "published" value
 * @method boolean             getMicropost() Returns the current record's "micropost" value
 * @method Doctrine_Collection getComments()  Returns the current record's "comments" collection
 * @method BlogPost            setTitle()     Sets the current record's "title" value
 * @method BlogPost            setContent()   Sets the current record's "content" value
 * @method BlogPost            setMarkdown()  Sets the current record's "markdown" value
 * @method BlogPost            setViews()     Sets the current record's "views" value
 * @method BlogPost            setPublished() Sets the current record's "published" value
 * @method BlogPost            setMicropost() Sets the current record's "micropost" value
 * @method BlogPost            setComments()  Sets the current record's "comments" collection
 * 
 * @package    blog
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('markdown', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('views', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('micropost', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BlogComment as comments', array(
             'local' => 'id',
             'foreign' => 'blog_post_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}