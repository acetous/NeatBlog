<?php

/**
 * BlogPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    blog
 * @subpackage model
 * @author     Sebastian Herbermann
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BlogPost extends BaseBlogPost
{
	public function getPermaLink()
	{
		return sfContext::getInstance()->getRouting()->generate('post_permalink', $this, true);
	}
	
	public function getExcerpt()
	{
		$lines = explode("\n", $this->getContent());
		$excerpt = "";
		$excertPresent = false;
		foreach ($lines as $index => $line) {
			$line = trim($line);
			
			if (!$excertPresent) {
				// skip empty lines
				if (empty($line))
					continue;
				// skip headings
				// FIXME lines starting with '=' or '-' will be ignored
				if (in_array(substr($line, 0, 1), array('#', '=', '-')))
					continue;
				if (array_key_exists($index + 1, $lines) && in_array(substr($lines[$index + 1], 0, 1), array('=', '-')))
					continue;
				// skip images
				// TODO skip lines containing images?
				if (substr($line, 0, 2) == '![')
					continue;
				// skip lines containing HTML
				if (preg_match('/<(img|div|span)[^>]*>/i', $line) > 0)
					continue;
				
				$excerpt .= $line."\n";
				$excertPresent = true;
			} elseif (preg_match('/^\[[a-z]+\]: .*$/i', $line) > 0) {
				$excerpt .= $line."\n";
			}
		}
		return $excerpt;
	}
	
	public function isMicropost()
	{
		return $this->getMicropost();
	}
	
	public function getComments() {
		return Doctrine::getTable('BlogComment')
			->createQuery('c')
			->where('c.spam = ?', false)
			->AndWhere('c.blog_post_id = ?', $this->getId())
			->orderBy('created_at asc')
			->execute();
	}
	
	public function save(Doctrine_Connection $conn = null, $skipLuceneUpdate = false) {
		if ($this->getToken() == '') {
			$this->setToken(BlogPostTable::generateToken());
		}
		
		$conn = $conn ? $conn : $this->getTable()->getConnection();
		
		$conn->beginTransaction();
		
		try {
			$ret = parent::save($conn);
			if (!$skipLuceneUpdate)
				$this->updateLuceneIndex();
			$conn->commit();
			return $ret;
		} catch (Exception $e) {
			$conn->rollBack();
			throw $e;
		}
	}
	
	public function delete(Doctrine_Connection $conn = null) {
		$index = BlogPostTable::getLuceneIndex();
		
		foreach ($index->find('pk:'.$this->getId()) as $hit)
			$index->delete($hit->id);
		
		return parent::delete($conn);
	}
	
	public function updateLuceneIndex() {
		$index = BlogPostTable::getLuceneIndex();
		
		// remove existing entry
		foreach ($index->find('pk:'.$this->getId()) as $hit)
			$index->delete($hit->id);
		
		if (!$this->getPublished())
			return;
		
		$doc = new Zend_Search_Lucene_Document();
		
		$doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));
		
		$doc->addField(Zend_Search_Lucene_Field::UnStored('title', $this->getTitle(), 'utf-8'));
		$doc->addField(Zend_Search_Lucene_Field::UnStored('content', $this->getContent(), 'utf-8'));
		$comments = '';
		foreach ($this->getComments() as $comment)
			$comments .= $comment->getContent()."\n";
		$doc->addField(Zend_Search_Lucene_Field::UnStored('comments', $comments, 'utf-8'));
		
		$index->addDocument($doc);
		$index->commit();
	}
}
